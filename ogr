#!/usr/bin/python3
import sys
import json
import datetime

weekDays = {'monday': 0, 'tuesday': 1, 'wednesday': 2
            , 'thursday': 3, 'friday': 4, 'saturday': 5, 'sunday': 6}
ind_to_day = {0: 'Mon', 1: 'Tue', 2: 'Wed', 3: 'Thu', 4: 'Fri', 5: 'Sat', 6: 'Sun'}

def day_s(diff):
    if diff == 1:
        return(" day) ")
    else:
        return(" days) ")

def show(data):
    dates = data["dates"]
    events = data["events"]
    weekdays = data["weekdays"]
    for i in range(len(dates)):
        today = datetime.date.today()
        year, month, day = (int(x) for x in dates[i].split('-'))
        _date = datetime.date(year, month, day)
        diff = (_date - today).days
        print(dates[i], " (", weekdays[dates[i]], " : ", diff, day_s(diff)
              , "[", i, "]", sep='', end=":\n")
        if (len(events[dates[i]]) != 0):
            for j in range(len(events[dates[i]])):
                print("-", events[dates[i]][j], " [", j, "]", sep='')
        print("")


args = sys.argv
current_dir = args[0][:-4]
data_file = open(current_dir + '/data.json')
data_string = data_file.read();
data_file.close()
data = json.loads(data_string)

if (len(args) == 1):
    show(data)
elif (args[1] == "date"):
    print(datetime.date.today())
elif args[1] == 'open':
    ok = True
    if len(args) < 3:
        print("No arguments");
        ok = False

    date = args[2]
    if date == 'today' or date == 'Today':
        date = datetime.date.today().strftime("%Y-%m-%d")
    elif date == 'tomorrow' or date == 'Tomorrow':
        date = datetime.date.today() + datetime.timedelta(days=1)
        date = date.strftime("%Y-%m-%d")
    elif date[0] == '+':
        shift = int(date[1:])
        date = datetime.date.today() + datetime.timedelta(days=shift)
        date = date.strftime("%Y-%m-%d")
    elif date in weekDays:
        wd = date
        date = datetime.date.today()
        while date.weekday() != weekDays[wd]:
            date += datetime.timedelta(days=1)
        date = date.strftime("%Y-%m-%d")
    elif date == 'next':
        wd = args[3]
        if wd not in weekDays:
            ok = False
        else:
            date = datetime.date.today()
            while date.weekday() != weekDays[wd]:
                date += datetime.timedelta(days=1)
            date += datetime.timedelta(days=7)
            date = date.strftime("%Y-%m-%d")
    else:
        test = args[2].split('-')
        if len(test) != 3:
            print("Incorrect date format")
            ok = False

    for d in data["dates"]:
        if d == date:
            print("Date already exists")
            ok = False
            break


    if ok:
        data["dates"].append(date)
        data["dates"].sort()
        data["events"][date] = []
        year, month, day = (int(x) for x in date.split('-'))
        _date = datetime.date(year, month, day)
        data["weekdays"][date] = ind_to_day[_date.weekday()]


elif args[1] == 'close':
    if int(args[2]) < len(data["dates"]):
        data["events"].pop(data["dates"][int(args[2])])
        data["dates"].pop(int(args[2]))
    else:
        print("no such index")

elif args[1] == 'add':
    ok = True
    if args[2] != 'to':
        print('Use "add to" instead')
        ok = False
    if ok:
        index = int(args[3])
        text = input()
        data["events"][data["dates"][index]].append(text)

elif args[1] == 'rm':
    ok = True
    if len(args) < 4 or args[3] != "from":
        print('Use "rm <index> from <index>" instead')
        ok = False
    if ok and len(data["dates"]) <= int(args[4]):
        print("index out of range")
        ok = False
    if ok and len(data["events"][data["dates"][int(args[4])]]) <= int(args[2]):
        print("index out of range")
        ok = False
    if ok:
        data["events"][data["dates"][int(args[4])]].pop(int(args[2]))


elif args[1] == 'clear':
    if int(args[2]) < len(data["dates"]):
        data["events"][data["dates"][int(args[2])]] = []
    else:
        print("no such index")

else:
    print("No such command")
    print("Possible commands:\n")

    print("[<empty>]")

    print("[open <date>]")
    print("[open today]")
    print("[open tomorrow]")
    print("[open <day of the week>]")
    print("[open next <day of the week>]")
    print("[open +<number of days>]")

    print("[close <index>]")
    print("[clear <index>]")
    print("[add to <index>]")
    print("[rm <index> from <index>]")


data_string = json.dumps(data)
data_file = open(current_dir + '/data.json', 'w')
data_file.write(data_string)
